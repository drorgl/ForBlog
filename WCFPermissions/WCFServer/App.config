<?xml version="1.0"?>
<configuration>
    <system.serviceModel>
      <extensions>
        <behaviorExtensions>
          <add name="loggingInspector" type="WCFServer.Logging.LoggingConfigurationSection, WCFServer"/>
          <add name="customInspector" type="WCFServer.CustomConfigurationSection, WCFServer" />
        </behaviorExtensions>
      </extensions>
      
        <behaviors>
            <serviceBehaviors>
              <behavior name="">
                    <serviceMetadata httpGetEnabled="true"/>
                    <serviceDebug includeExceptionDetailInFaults="false"/>
                    <loggingInspector/>
                  <!--<customInspector BehaviorName="WCFServer.Logging.LoggingBehavior,WCFServer" />-->
                </behavior>
              <behavior name="simpleUsernameValidation">
                <serviceMetadata httpGetEnabled="true"/>
                <serviceDebug includeExceptionDetailInFaults="false"/>

                <serviceCredentials>
                  <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="WCFServer.Security.CustomUsernameValidator, WCFServer"/>

                  <serviceCertificate findValue="sslstreamtest" x509FindType="FindBySubjectName" storeLocation="CurrentUser" storeName="My"/>
                </serviceCredentials>
                <!--<loggingInspector/>-->
                <serviceAuthorization principalPermissionMode="Custom">
                  <authorizationPolicies>
                    <add policyType="WCFServer.Security.Simple.SimpleAuthorizationPolicy, WCFServer" />
                  </authorizationPolicies>
                </serviceAuthorization>
                <customInspector BehaviorName="WCFServer.Logging.LoggingBehavior,WCFServer" />
              </behavior>

              <behavior name="AuthorizationAuthenticationValidation">
                <serviceMetadata httpGetEnabled="true" />
                <serviceDebug includeExceptionDetailInFaults="true" />
                <serviceCredentials>
                  <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="WCFServer.Security.CustomUsernameValidator, WCFServer"/>
                  <serviceCertificate findValue="sslstreamtest" x509FindType="FindBySubjectName" storeLocation="CurrentUser" storeName="My"/>
                </serviceCredentials>
                <serviceAuthenticationManager serviceAuthenticationManagerType="WCFServer.Security.CustomAuthenticationManager, WCFServer" />
                <!--<serviceAuthorization serviceAuthorizationManagerType="WCFServer.Security.CustomAuthorizationPolicy, WCFServer" />-->
                <serviceAuthorization principalPermissionMode="Custom" serviceAuthorizationManagerType="WCFServer.Security.CustomAuthorizationManager, WCFServer">
                  <authorizationPolicies>
                    <add policyType="WCFServer.Security.CustomUsernameAuthorizationPolicy, WCFServer" />
                  </authorizationPolicies>
                </serviceAuthorization>
                <loggingInspector/>
              </behavior>

              <behavior name="CertificateValidation">
                <serviceMetadata httpGetEnabled="true" />
                <serviceDebug includeExceptionDetailInFaults="true" />
                <serviceCredentials>
                  <clientCertificate>
                    <authentication certificateValidationMode="Custom" customCertificateValidatorType="WCFServer.Security.CustomCertificateValidator, WCFServer"/>
                  </clientCertificate>
                  <serviceCertificate findValue="sslstreamtest" x509FindType="FindBySubjectName" storeLocation="CurrentUser" storeName="My"/>
                </serviceCredentials>
                <serviceAuthenticationManager serviceAuthenticationManagerType="WCFServer.Security.CustomAuthenticationManager, WCFServer" />
                <!--<serviceAuthorization serviceAuthorizationManagerType="WCFServer.Security.CustomAuthorizationPolicy, WCFServer" />-->
                <serviceAuthorization principalPermissionMode="Custom" serviceAuthorizationManagerType="WCFServer.Security.CustomAuthorizationManager, WCFServer">
                  <authorizationPolicies>
                    <add policyType="WCFServer.Security.CustomCertificateAuthorizationPolicy, WCFServer" />
                  </authorizationPolicies>
                </serviceAuthorization>
                <loggingInspector/>
              </behavior>

              <behavior name="InvokerBehavior">
                <serviceMetadata httpGetEnabled="true" />
                <serviceDebug includeExceptionDetailInFaults="false" />
                <serviceCredentials>
                  <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="WCFServer.Security.CustomUsernameValidator, WCFServer"/>
                  <serviceCertificate findValue="sslstreamtest" x509FindType="FindBySubjectName" storeLocation="CurrentUser" storeName="My"/>
                </serviceCredentials>
                <loggingInspector/>
              </behavior>
              
            </serviceBehaviors>
            
        </behaviors>
      <bindings>
        <customBinding>
          <binding name="binaryBinding">
            <security authenticationMode="UserNameForSslNegotiated">
              <secureConversationBootstrap authenticationMode="UserNameOverTransport" />
            </security>
            <binaryMessageEncoding />
            <httpTransport maxReceivedMessageSize="10000000" maxBufferSize="10000000" />
          </binding>
          
        </customBinding>
        <wsHttpBinding>
          <binding name="">
            <security mode="None">
              <transport clientCredentialType="None"></transport>
            </security>
          </binding>
          <binding name="usernameHttpBinding">
            <security mode="Message">
              <message clientCredentialType="UserName"/>
            </security>
          </binding>
          <binding name="certificateHttpBinding">
            <security mode="Message">
              <message clientCredentialType="Certificate" />
            </security>
          </binding>
        </wsHttpBinding>
      </bindings>
        <services>
            <service name="WCFServer.Services.ServiceDemo">
                <endpoint address="" binding="wsHttpBinding" contract="WCFServer.Services.IServiceDemo">
                    <identity>
                        <dns value="sslstreamtest" />
                    </identity>
                </endpoint>
                <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
                <host>
                    <baseAddresses>
                        <add baseAddress="http://localhost:8732/Design_Time_Addresses/WCFServer.Services/ServiceDemo/" />
                    </baseAddresses>
                </host>
            </service>
            <service  name="WCFServer.Services.SimpleUsernameServiceDemo" behaviorConfiguration="simpleUsernameValidation">
                <endpoint address="" binding="wsHttpBinding" bindingConfiguration="usernameHttpBinding"
                    contract="WCFServer.Services.ISimpleUsernameServiceDemo">
                    <identity>
                        <dns value="sslstreamtest" />
                    </identity>
                </endpoint>
                <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
                <host>
                    <baseAddresses>
                        <add baseAddress="http://localhost:8732/Design_Time_Addresses/WCFServer.Services/SimpleUsernameServiceDemo/" />
                    </baseAddresses>
                </host>
            </service>
            <service name="WCFServer.Services.AAServiceDemo" behaviorConfiguration="AuthorizationAuthenticationValidation">
                <endpoint address="" binding="wsHttpBinding" bindingConfiguration="usernameHttpBinding"
                    contract="WCFServer.Services.IAAServiceDemo">
                    <identity>
                        <dns value="sslstreamtest" />
                    </identity>
                </endpoint>
                <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
                <host>
                    <baseAddresses>
                        <add baseAddress="http://localhost:8732/Design_Time_Addresses/WCFServer.Services/AAServiceDemo/" />
                    </baseAddresses>
                </host>
            </service>
            <service name="WCFServer.Services.InvokerServiceDemo" behaviorConfiguration="InvokerBehavior">
                <endpoint address="" binding="customBinding" bindingConfiguration="binaryBinding" contract="WCFServer.Services.IInvokerServiceDemo">
                    <identity>
                        <dns value="sslstreamtest" />
                    </identity>
                </endpoint>
                <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
                <host>
                    <baseAddresses>
                        <add baseAddress="http://localhost:8732/Design_Time_Addresses/WCFServer.Services/InvokerServiceDemo/" />
                    </baseAddresses>
                </host>
            </service>
            <service name="WCFServer.Services.CertificateServiceDemo" behaviorConfiguration="CertificateValidation">
                <endpoint address="" binding="wsHttpBinding" bindingConfiguration="certificateHttpBinding" contract="WCFServer.Services.ICertificateServiceDemo">
                    <identity>
                        <dns value="sslstreamtest" />
                    </identity>
                </endpoint>
                <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
                <host>
                    <baseAddresses>
                        <add baseAddress="http://localhost:8732/Design_Time_Addresses/WCFServer.Services/CertificateServiceDemo/" />
                    </baseAddresses>
                </host>
            </service>
        </services>
    </system.serviceModel>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>
